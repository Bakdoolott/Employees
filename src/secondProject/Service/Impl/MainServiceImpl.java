package secondProject.Service.Impl;

import secondProject.Service.DBHelper;
import secondProject.Service.MainService;
import secondProject.models.Person;
import secondProject.models.enums.Position;

import java.util.Scanner;

public class MainServiceImpl implements MainService {
    Scanner scanner = new Scanner(System.in);
    DBHelper dbHelper = new DBHelperImpl();
    @Override
    public void start() {
        while (true) {
            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚óÄ  üê±‚ÄçüèçÔ∏è\n1. –ó–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ‚óÄ ü§ë\n2. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ ‚óÄ ü§ì\n3. –ê–Ω–∞–ª–∏–∑ ‚óÄ üßê");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    addNewPerson();
                    break;
                case 2:
                    viewPersonList();
                    break;
                case 3:
                    analyze();
                    break;
                default:
                    throw new RuntimeException("–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –æ—Ç–≤–µ—Ç");
            }
        }
    }

    private void analyze() {
        while (choice == 'y') {
            int chosenNumber = 0;
            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ \n" +
                    "1. –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n" +
                    "2. –í—ã–≤–µ—Å—Ç–∏ –º–∞—Ö –∏ –º–∏–Ω –≤–æ–∑—Ä–∞—Å—Ç\n" +
                    "3. –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥–Ω—é—é –∑–ø\n" +
                    "4. –í—ã–≤–µ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —Å–∞–º–æ–π –±–æ–ª—å—à–æ–π –∑–ø\n" +
                    "5. –í—ã–≤–µ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —Å–∞–º–æ–π –Ω–∏–∑–∫–æ–π –∑–ø\n" +
                    "6. –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏\n" +
                    "7. –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)\n" +
                    "8. –í—ã–≤–µ—Å—Ç–∏ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞—Ç—Ä–∞—Ç –Ω–∞ –∑–ø –∑–∞ –≥–æ–¥ \n" +
                    "9. –í—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —É –∫–æ–≥–æ –∑–ø –º–µ–Ω—å—à–µ 10000\n" +
                    "10. –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä");

            chosenNumber = scanner.nextInt();

            dbHelper.getSelectedInormation(chosenNumber);
            System.out.println("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? \n–î–∞: y.  –ù–µ—Ç: n");
            choice = scanner.next().charAt(0);
        }
        choice = 'y';
    }

    private void viewPersonList() {
        while (choice == 'y') {
            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ \n1. –ü–æ –∏–º–µ–Ω–∏ \n2. –û—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º \n3. –û—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º");
            int chosenNumber = scanner.nextInt();
            dbHelper.getSortedPerson(chosenNumber);
            System.out.println("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? \n–î–∞: y.  –ù–µ—Ç: n");
            choice = scanner.next().charAt(0);
        }
        choice = 'y';
    }

    private void addNewPerson() {

        while (choice == 'y') {
            System.out.println("–£–∫–∞–∂–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
            String name = scanner.next();
            System.out.println("–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
            int age = scanner.nextInt();
            if(age < 18){
                System.out.println("–ù–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö –Ω–µ –±–µ—Ä–µ–º");
                addNewPerson();
            }
            System.out.println("–£–∫–∞–∂–∏—Ç–µ –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞");
            Double salary = scanner.nextDouble();
            if(salary <= 0){
                System.out.println("–ó–∞ –∫–æ–ø–µ–π–∫–∏ –Ω–∏–∫—Ç–æ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!!!");
                addNewPerson();
            }
            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é");

            for (Position p : Position.values()) {
                System.out.println(p.getVal() + 1 + "." + p);
            }
            int positionVal = scanner.nextInt();

            Position position = Position.values()[positionVal - 1];

            Person person = dbHelper.savePerson(name, age, salary, position);
            System.out.println(person + "\n–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω \n");
            System.out.println("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? \n–î–∞ -- y \n–ù–µ—Ç -- n");
            choice = scanner.next().charAt(0); System.out.println();
        }
        choice = 'y';
    }

    static char choice = 'y';
}
